name: Deployment Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: '@mindfiredigital/pivothead_core'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@9.15.2

      - name: Set up global bin directory
        run: |
          pnpm config set global-bin-dir ~/.pnpm-global
          export PATH="$PATH:$(pnpm config get global-bin-dir)/bin"
          
      - name: Install dependencies with pnpm
        run: pnpm install

      - name: Restore changes in pnpm lock
        run: git restore pnpm-lock.yaml

      - name: Build application
        run: pnpm run build

      - name: Set Git user name and email
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
  create-github-release:
    name: Create GitHub release and publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@9.15.2

      - name: Set up global bin directory
        run: |
          pnpm config set global-bin-dir ~/.pnpm-global
          export PATH="$PATH:$(pnpm config get global-bin-dir)/bin"
        
      - name: Install dependencies
        run: pnpm install

      - name: Set Git user name and email
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
      - name: Create changeset and version packages
        run: |
          pnpm add -g @changesets/cli
          if pnpm exec changeset version; then
            git add . 
            git commit -m "Version packages" || echo "No changes to commit."
            git push origin main || echo "No changes to push."
          else
            echo "No unreleased changesets found, skipping versioning."
          fi
          
      - name: Publish to npm
        run: pnpm changeset publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: core-build-zip
          path: ./packages/core/dist
