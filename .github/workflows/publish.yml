name: Deployment Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACTIONS_STEP_DEBUG: true  # Enable debug logging
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}  # npm auth token

jobs:
  build:
    name: '@mindfiredigital/pivothead_core'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Check Node.js, pnpm, and npm versions
        run: |
          node -v
          pnpm -v || echo "pnpm not installed"
          npm -v
        shell: bash

      - name: Install pnpm
        run: npm install -g pnpm
        shell: bash

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        shell: bash

      - name: Build application
        run: pnpm run build
        shell: bash

      - name: Set Git user name and email
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

  create-github-release:
    name: Create GitHub release and publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Check Node.js, pnpm, and npm versions
        run: |
          node -v
          pnpm -v || echo "pnpm not installed"
          npm -v
        shell: bash

      - name: Install pnpm
        run: npm install -g pnpm
        shell: bash

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        shell: bash

      - name: Verify npm authentication
        run: |
          echo "Checking npm authentication..."
          npm whoami || echo "Not logged into npm. Check NPM_TOKEN."
        shell: bash

      - name: Create changeset and version packages
        run: |
          pnpm add -g @changesets/cli
          pnpm changeset version
          git add .
          git commit -m "Version packages"
          git push origin main
        shell: bash

      - name: Publish to npm (Dry Run)
        run: pnpm changeset publish --dry-run
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash

      - name: Publish to npm (Real)
        run: |
          set -x
          pnpm changeset publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.version.outputs.newVersion }}
          release_name: Release v${{ steps.version.outputs.newVersion }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: core-build-zip
          path: ./packages/core/dist
