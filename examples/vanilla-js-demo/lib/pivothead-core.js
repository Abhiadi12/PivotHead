(function(n,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(n=typeof globalThis<"u"?globalThis:n||self,u(n.PivotheadCore={}))})(this,function(n){"use strict";function u(o,t,s){if(o.length===0)return 0;switch(s){case"sum":return o.reduce((a,r)=>a+(Number(r[t])||0),0);case"avg":return o.reduce((a,r)=>a+(Number(r[t])||0),0)/o.length;case"count":return o.length;case"min":return Math.min(...o.map(a=>Number(a[t])||0));case"max":return Math.max(...o.map(a=>Number(a[t])||0));default:return 0}}function g(o,t){return[...o].sort((s,e)=>{const a=s[t.field],r=e[t.field];return a<r?t.direction==="asc"?-1:1:a>r?t.direction==="asc"?1:-1:0})}function l(o,t=null,s=null){let e=[...o.data];if(t&&(e=g(e,t)),s){const{fields:a,grouper:r}=s,i={};e.forEach(c=>{const h=r(c,a);i[h]||(i[h]=[]),i[h].push(c)}),e=Object.values(i).flat()}return e}class p{constructor(t){this.config={...t,defaultAggregation:t.defaultAggregation||"sum",isResponsive:t.isResponsive??!0},this.state={data:t.data||[],processedData:{headers:[],rows:[],totals:{}},rows:t.rows||[],columns:t.columns||[],measures:t.measures||[],sortConfig:null,rowSizes:this.initializeRowSizes(t.data||[]),expandedRows:{},groupConfig:t.groupConfig||null,groups:[],selectedMeasures:t.measures||[],selectedDimensions:t.dimensions||[],selectedAggregation:this.config.defaultAggregation,formatting:t.formatting||{},columnWidths:{},isResponsive:this.config.isResponsive??!0,columnGroups:[]},this.state.processedData=this.processData(this.state.data),this.state.groupConfig&&this.applyGrouping()}initializeRowSizes(t){return t.map((s,e)=>({index:e,height:40}))}processData(t){return{headers:this.generateHeaders(),rows:this.generateRows(t),totals:this.calculateTotals(t)}}generateHeaders(){const t=this.state.rows?this.state.rows.map(e=>e.caption||e.uniqueName):[],s=this.state.columns?this.state.columns.map(e=>e.caption||e.uniqueName):[];return[...t,...s]}generateRows(t){return!t||!this.state.rows||!this.state.columns?[]:t.map(s=>[...this.state.rows.map(e=>s[e.uniqueName]),...this.state.columns.map(e=>s[e.uniqueName])])}calculateTotals(t){const s={};return!t||!this.state.measures||this.state.measures.forEach(e=>{s[e.uniqueName]=t.reduce((a,r)=>a+(Number(r[e.uniqueName])||0),0)}),s}setMeasures(t){this.state.selectedMeasures=t,this.state.processedData=this.processData(this.state.data)}setDimensions(t){this.state.selectedDimensions=t,this.state.processedData=this.processData(this.state.data)}setAggregation(t){this.state.selectedAggregation=t,this.state.processedData=this.processData(this.state.data)}formatValue(t,s){const e=this.state.formatting[s];if(!e)return String(t);try{switch(e.type){case"currency":return new Intl.NumberFormat(e.locale||"en-US",{style:"currency",currency:e.currency||"USD"}).format(t);case"number":return new Intl.NumberFormat(e.locale||"en-US",{minimumFractionDigits:e.decimals||0,maximumFractionDigits:e.decimals||0}).format(t);case"percentage":return new Intl.NumberFormat(e.locale||"en-US",{style:"percent",minimumFractionDigits:e.decimals||0}).format(t);case"date":return new Date(t).toLocaleDateString(e.locale||"en-US",{dateStyle:"medium"});default:return String(t)}}catch(a){return console.error(`Error formatting value for field ${s}:`,a),String(t)}}sort(t,s){this.state.sortConfig={field:t,direction:s},this.state.data=l(this.config,this.state.sortConfig,this.state.groupConfig),this.state.processedData=this.processData(this.state.data)}applyGrouping(){if(!this.state.groupConfig)return;const{rowFields:t,columnFields:s,grouper:e}=this.state.groupConfig;if(!t||!s||!e){console.error("Invalid groupConfig:",this.state.groupConfig);return}this.state.groups=this.createGroups(this.state.data,[...t,...s],e),this.state.processedData=this.processData(this.state.data)}createGroups(t,s,e){if(!s||s.length===0)return[{key:"All",items:t,aggregates:{}}];const a={};return t.forEach(r=>{const i=e(r,s);a[i]||(a[i]={key:i,items:[],subgroups:[],aggregates:{}}),a[i].items.push(r)}),s.length>1&&Object.values(a).forEach(r=>{r.subgroups=this.createGroups(r.items,s.slice(1),e)}),Object.values(a).forEach(r=>{this.state.measures.forEach(i=>{const c=`${this.state.selectedAggregation}_${i.uniqueName}`;r.aggregates[c]=u(r.items,i.uniqueName,this.state.selectedAggregation)})}),Object.values(a)}setGroupConfig(t){this.state.groupConfig=t,t?this.applyGrouping():(this.state.groups=[],this.state.processedData=this.processData(this.state.data))}getGroupedData(){return this.state.groups}getState(){return{...this.state}}reset(){this.state={...this.state,data:this.config.data||[],processedData:this.processData(this.config.data||[]),sortConfig:null,rowSizes:this.initializeRowSizes(this.config.data||[]),expandedRows:{},groupConfig:this.config.groupConfig||null,groups:[]},this.state.groupConfig&&this.applyGrouping()}resizeRow(t,s){const e=this.state.rowSizes.findIndex(a=>a.index===t);e!==-1&&(this.state.rowSizes[e].height=Math.max(20,s))}toggleRowExpansion(t){this.state.expandedRows[t]=!this.state.expandedRows[t]}isRowExpanded(t){return!!this.state.expandedRows[t]}dragRow(t,s){const e=[...this.state.data],[a]=e.splice(t,1);e.splice(s,0,a),this.state.data=e,this.state.rowSizes=this.state.rowSizes.map((r,i)=>({...r,index:i<t||i>s?i:i<s?i+1:i-1})),this.state.processedData=this.processData(this.state.data)}dragColumn(t,s){const e=[...this.state.columns],[a]=e.splice(t,1);e.splice(s,0,a),this.state.columns=e,this.state.processedData=this.processData(this.state.data)}}n.PivotEngine=p,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
