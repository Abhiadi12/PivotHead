(function(n,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(n=typeof globalThis<"u"?globalThis:n||self,r(n.PivotheadCore={}))})(this,function(n){"use strict";function r(u,t){return[...u].sort((s,e)=>{const i=s[t.field],a=e[t.field];return i<a?t.direction==="asc"?-1:1:i>a?t.direction==="asc"?1:-1:0})}function p(u,t=null,s=null){let e=[...u.data];if(t&&(e=r(e,t)),s){const{fields:i,grouper:a}=s,o={};e.forEach(l=>{const h=a(l,i);o[h]||(o[h]=[]),o[h].push(l)}),e=Object.values(o).flat()}return e}class g{constructor(t){this.config=t,this.state={data:p(t),sortConfig:null,rowSizes:this.initializeRowSizes(t.data),expandedRows:{},groupConfig:t.groupConfig||null,groups:[],columns:[...t.columns]},this.state.groupConfig&&this.applyGrouping()}initializeRowSizes(t){return t.map((s,e)=>({index:e,height:40}))}sort(t,s){this.state.sortConfig={field:t,direction:s},this.applySort(),this.state.groupConfig&&this.applyGrouping()}applySort(){this.state.data=p(this.config,this.state.sortConfig),this.state.rowSizes=this.state.data.map((t,s)=>this.state.rowSizes[s]||{index:s,height:40})}applyGrouping(){if(!this.state.groupConfig)return;const{fields:t,grouper:s}=this.state.groupConfig;this.state.groups=this.createGroups(this.state.data,t,s)}createGroups(t,s,e){if(s.length===0)return[{key:"All",items:t}];const i={};return t.forEach(a=>{const o=e(a,s);i[o]||(i[o]={key:o,items:[],subgroups:[]}),i[o].items.push(a)}),s.length>1&&Object.values(i).forEach(a=>{a.subgroups=this.createGroups(a.items,s.slice(1),e)}),Object.values(i)}setGroupConfig(t){this.state.groupConfig=t,t?this.applyGrouping():this.state.groups=[]}getGroupedData(){return this.state.groups}getState(){return{...this.state}}reset(){this.state.sortConfig=null,this.state.data=p(this.config),this.state.rowSizes=this.initializeRowSizes(this.config.data),this.state.expandedRows={},this.state.groupConfig=this.config.groupConfig||null,this.state.groups=[],this.state.groupConfig&&this.applyGrouping()}resizeRow(t,s){const e=this.state.rowSizes.findIndex(i=>i.index===t);e!==-1&&(this.state.rowSizes[e].height=Math.max(20,s))}toggleRowExpansion(t){this.state.expandedRows[t]=!this.state.expandedRows[t]}isRowExpanded(t){return!!this.state.expandedRows[t]}dragRow(t,s){const e=[...this.state.data],[i]=e.splice(t,1);e.splice(s,0,i),this.state.data=e,this.state.rowSizes=this.state.rowSizes.map((a,o)=>({...a,index:o<t||o>s?o:o<s?o+1:o-1})),this.state.groupConfig&&this.applyGrouping()}dragColumn(t,s){const e=[...this.state.columns],[i]=e.splice(t,1);e.splice(s,0,i),this.state.columns=e}}n.PivotEngine=g,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
